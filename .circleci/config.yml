# generator: n-circle2-cli
# template: component

references:
  container_config: &container_config
    working_directory: ~/project/build
    docker:
      - image: cimg/node:<< parameters.node-version >>-browsers
    parameters:
      node-version:
        default: "18.17"
        type: string

  workspace_root: &workspace_root ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  npm_cache_keys: &npm_cache_keys
    keys:
      - v3-dependency-npm-{{ checksum "package-lock.json" }}-
      - v3-dependency-npm-{{ checksum "package-lock.json" }}
      - v3-dependency-npm-

  cache_npm_cache: &cache_npm_cache
    save_cache:
      key: v3-dependency-npm-{{ checksum "package-lock.json" }}-{{ epoch }}
      paths:
        - ./node_modules/

  restore_npm_cache: &restore_npm_cache
    restore_cache:
      <<: *npm_cache_keys

  filters_only_main: &filters_only_main
    branches:
      only: main

  filters_ignore_main: &filters_ignore_main
    branches:
      ignore: main

  filters_ignore_tags: &filters_ignore_tags
    tags:
      ignore: /.*/

  filters_version_tag: &filters_version_tag
    tags:
      only:
        - /^v?\d+\.\d+\.\d+(?:-beta\.\d+)?$/
    branches:
      ignore: /.*/

  filters_qa_tag: &filters_qa_tag
    tags:
      only:
        - /^qa-v\d+$/
    branches:
      ignore: /.*/

  filters_canary_tag: &filters_canary_tag
    tags:
      only:
        - /^canary-v\d+$/
    branches:
      ignore: /.*/

  filters_production_tag: &filters_production_tag
    tags:
      only:
        - /^prod-v\d+$/
    branches:
      ignore: /.*/

version: 2.1

orbs:
  node: circleci/node@4.6.0

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - run:
          name: Checkout next-ci-shared-helpers
          command: git clone --depth 1
            git@github.com:Financial-Times/next-ci-shared-helpers.git --branch
            unpin-heroku .circleci/shared-helpers
      - *restore_npm_cache
      - run:
          name: Install project dependencies
          command: make install
      - run:
          name: Run the project build task
          command: make build
      - run:
          name: shared-helper / generate-build-state-artifacts
          command: .circleci/shared-helpers/helper-generate-build-state-artifacts
          when: always
      - *cache_npm_cache
      - store_artifacts:
          path: build-state
          destination: build-state
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  test:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Run tests
          command: make test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/results.xml
            MOCHA_FILE: test-results/mocha/results.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results

  publish:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: shared-helper / npm-store-auth-token
          command: .circleci/shared-helpers/helper-npm-store-auth-token
      - run: npx snyk monitor --org=customer-products
          --project-name=Financial-Times/n-service-worker
      - run:
          name: shared-helper / npm-version-and-publish-public
          command: .circleci/shared-helpers/helper-npm-version-and-publish-public

  deploy:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Deploy
          command: NODE_OPTIONS="--no-experimental-fetch" make deploy
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/results.xml
            MOCHA_FILE: test-results/mocha/results.xml

workflows:
  version: 2

  build-test:
    jobs:
      - build:
          filters:
            <<: *filters_ignore_tags
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
  build-test-publish:
    jobs:
      - build:
          filters:
            <<: *filters_version_tag
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          filters:
            <<: *filters_version_tag
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - publish:
          context: npm-publish-token
          filters:
            <<: *filters_version_tag
          requires:
            - test-v18.17
  build-test-deploy-main:
    jobs:
      - build:
          filters:
            <<: *filters_only_main
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          filters:
            <<: *filters_only_main
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - deploy:
          filters:
            <<: *filters_only_main
          requires:
            - test-v18.17

  build-test-deploy-qa:
    jobs:
      - build:
          filters:
            <<: *filters_qa_tag
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          filters:
            <<: *filters_qa_tag
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - deploy:
          filters:
            <<: *filters_qa_tag
          requires:
            - test-v18.17

  build-test-deploy-canary:
    jobs:
      - build:
          filters:
            <<: *filters_canary_tag
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          filters:
            <<: *filters_canary_tag
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - deploy:
          filters:
            <<: *filters_canary_tag
          requires:
            - test-v18.17

  build-test-deploy-production:
    jobs:
      - build:
          filters:
            <<: *filters_production_tag
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          filters:
            <<: *filters_production_tag
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - deploy:
          filters:
            <<: *filters_production_tag
          requires:
            - test-v18.17

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            <<: *filters_only_main
    jobs:
      - build:
          context: next-nightly-build
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]
      - test:
          requires:
            - build-v<< matrix.node-version >>
          context: next-nightly-build
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.17" ]

notify:
  webhooks:
    - url: https://ft-next-webhooks.herokuapp.com/circleci2-workflow
